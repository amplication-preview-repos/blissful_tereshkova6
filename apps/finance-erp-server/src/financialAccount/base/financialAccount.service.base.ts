/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  FinancialAccount as PrismaFinancialAccount,
} from "@prisma/client";

export class FinancialAccountServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.FinancialAccountCountArgs, "select">
  ): Promise<number> {
    return this.prisma.financialAccount.count(args);
  }

  async financialAccounts(
    args: Prisma.FinancialAccountFindManyArgs
  ): Promise<PrismaFinancialAccount[]> {
    return this.prisma.financialAccount.findMany(args);
  }
  async financialAccount(
    args: Prisma.FinancialAccountFindUniqueArgs
  ): Promise<PrismaFinancialAccount | null> {
    return this.prisma.financialAccount.findUnique(args);
  }
  async createFinancialAccount(
    args: Prisma.FinancialAccountCreateArgs
  ): Promise<PrismaFinancialAccount> {
    return this.prisma.financialAccount.create(args);
  }
  async updateFinancialAccount(
    args: Prisma.FinancialAccountUpdateArgs
  ): Promise<PrismaFinancialAccount> {
    return this.prisma.financialAccount.update(args);
  }
  async deleteFinancialAccount(
    args: Prisma.FinancialAccountDeleteArgs
  ): Promise<PrismaFinancialAccount> {
    return this.prisma.financialAccount.delete(args);
  }
}

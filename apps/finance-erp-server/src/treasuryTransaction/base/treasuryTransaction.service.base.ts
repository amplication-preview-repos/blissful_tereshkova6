/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  TreasuryTransaction as PrismaTreasuryTransaction,
} from "@prisma/client";

export class TreasuryTransactionServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.TreasuryTransactionCountArgs, "select">
  ): Promise<number> {
    return this.prisma.treasuryTransaction.count(args);
  }

  async treasuryTransactions(
    args: Prisma.TreasuryTransactionFindManyArgs
  ): Promise<PrismaTreasuryTransaction[]> {
    return this.prisma.treasuryTransaction.findMany(args);
  }
  async treasuryTransaction(
    args: Prisma.TreasuryTransactionFindUniqueArgs
  ): Promise<PrismaTreasuryTransaction | null> {
    return this.prisma.treasuryTransaction.findUnique(args);
  }
  async createTreasuryTransaction(
    args: Prisma.TreasuryTransactionCreateArgs
  ): Promise<PrismaTreasuryTransaction> {
    return this.prisma.treasuryTransaction.create(args);
  }
  async updateTreasuryTransaction(
    args: Prisma.TreasuryTransactionUpdateArgs
  ): Promise<PrismaTreasuryTransaction> {
    return this.prisma.treasuryTransaction.update(args);
  }
  async deleteTreasuryTransaction(
    args: Prisma.TreasuryTransactionDeleteArgs
  ): Promise<PrismaTreasuryTransaction> {
    return this.prisma.treasuryTransaction.delete(args);
  }
}
